# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-29 08:57
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sais', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnlistedCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enrolled', models.BooleanField(default=False)),
                ('grade', models.FloatField(choices=[(1.0, b'1.00'), (1.25, b'1.25'), (1.5, b'1.50'), (1.75, b'1.75'), (2.0, b'2.00'), (2.25, b'2.25'), (2.5, b'2.50'), (2.75, b'2.75'), (3.0, b'3.00'), (4.0, b'4.00'), (5.0, b'5.00'), (6.0, b'INC'), (7.0, b'No Grade')], default=7.0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sais.CourseOffered')),
            ],
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('tuition_subsidy', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(unique=True)),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100)),
                ('up_mail', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=200)),
                ('birthday', models.DateField()),
                ('gender', models.CharField(max_length=7)),
                ('admitted_campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sais.Campus')),
                ('login_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sais.Program')),
                ('sts_bracket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sais.STSBracket')),
            ],
        ),
        migrations.CreateModel(
            name='StudentScholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('scholarship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Scholarship')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(1, b'Unpaid'), (2, b'Promised'), (3, b'Paid')], default=1)),
                ('academic_calendar', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sais.AcademicYear')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Student')),
            ],
        ),
        migrations.AddField(
            model_name='enlistedcourse',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Student'),
        ),
    ]
